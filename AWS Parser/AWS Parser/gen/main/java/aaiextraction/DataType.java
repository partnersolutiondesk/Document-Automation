// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aaiextraction/dto/extraction.proto

package aaiextraction;

/**
 * Protobuf enum {@code aaiextraction.DataType}
 */
public enum DataType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>UNKNOWN = 0;</code>
   */
  UNKNOWN(0),
  /**
   * <code>TEXT = 1;</code>
   */
  TEXT(1),
  /**
   * <code>AMOUNT = 2;</code>
   */
  AMOUNT(2),
  /**
   * <code>CODE = 3;</code>
   */
  CODE(3),
  /**
   * <code>DATE = 4;</code>
   */
  DATE(4),
  /**
   * <code>NUMBER = 5;</code>
   */
  NUMBER(5),
  /**
   * <code>TIME = 6;</code>
   */
  TIME(6),
  /**
   * <code>ADDRESS = 7;</code>
   */
  ADDRESS(7),
  /**
   * <code>CHECKBOX_SINGLE = 8;</code>
   */
  CHECKBOX_SINGLE(8),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>UNKNOWN = 0;</code>
   */
  public static final int UNKNOWN_VALUE = 0;
  /**
   * <code>TEXT = 1;</code>
   */
  public static final int TEXT_VALUE = 1;
  /**
   * <code>AMOUNT = 2;</code>
   */
  public static final int AMOUNT_VALUE = 2;
  /**
   * <code>CODE = 3;</code>
   */
  public static final int CODE_VALUE = 3;
  /**
   * <code>DATE = 4;</code>
   */
  public static final int DATE_VALUE = 4;
  /**
   * <code>NUMBER = 5;</code>
   */
  public static final int NUMBER_VALUE = 5;
  /**
   * <code>TIME = 6;</code>
   */
  public static final int TIME_VALUE = 6;
  /**
   * <code>ADDRESS = 7;</code>
   */
  public static final int ADDRESS_VALUE = 7;
  /**
   * <code>CHECKBOX_SINGLE = 8;</code>
   */
  public static final int CHECKBOX_SINGLE_VALUE = 8;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static DataType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static DataType forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN;
      case 1: return TEXT;
      case 2: return AMOUNT;
      case 3: return CODE;
      case 4: return DATE;
      case 5: return NUMBER;
      case 6: return TIME;
      case 7: return ADDRESS;
      case 8: return CHECKBOX_SINGLE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<DataType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      DataType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<DataType>() {
          public DataType findValueByNumber(int number) {
            return DataType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return aaiextraction.Extraction.getDescriptor().getEnumTypes().get(0);
  }

  private static final DataType[] VALUES = values();

  public static DataType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private DataType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:aaiextraction.DataType)
}

